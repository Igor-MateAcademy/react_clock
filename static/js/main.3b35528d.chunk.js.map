{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","previousName","name","props","undefined","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","changeName","Math","floor","random","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"2OAOaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aACb,WACE,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAE9B,OAfN,gCAmBE,SAAmBC,GACbA,EAAaC,OAASP,KAAKQ,MAAMD,MAEnCJ,QAAQC,IAAR,qCAA0CE,EAAaC,KAAvD,eAAkEP,KAAKQ,MAAMD,SAtBnF,kCA0BE,gBACuBE,IAAjBT,KAAKD,SACPW,cAAcV,KAAKD,WA5BzB,oBAgCE,WACE,OACE,+BACGC,KAAKJ,MAAMC,KAAKQ,2BAnCzB,GAA2BM,IAAMC,WCH3BC,G,kNACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKf,SAAS,CAAEY,gBAAgB,K,EAGlCI,WAAa,WACX,EAAKhB,SAAS,CAAEa,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,OACE,mCACE,sBAAKC,UAAU,MAAf,UACE,6CACA,4BAEItB,KAAKJ,MAAMkB,eACP,cAAC,EAAD,CAAOP,KAAMP,KAAKJ,MAAMmB,YACxB,oBAGR,wBACEQ,KAAK,SACLD,UAAU,cACVE,QAASxB,KAAKgB,UACdS,SAAUzB,KAAKJ,MAAMkB,eAJvB,wBASA,wBACES,KAAK,SACLD,UAAU,cACVE,QAASxB,KAAKiB,UACdQ,UAAWzB,KAAKJ,MAAMkB,eAJxB,wBASA,wBACES,KAAK,SACLD,UAAU,cACVE,QAASxB,KAAKkB,WAHhB,sC,GAhDQP,IAAMC,YA6DTC,IC9Dfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b35528d.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ninterface Props {\n  name: number\n}\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timer | undefined;\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => {\n        this.setState({ date: new Date() });\n\n        // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString());\n      },\n      1000,\n    );\n  }\n\n  componentDidUpdate(previousName: Props) {\n    if (previousName.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${previousName.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId !== undefined) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.date.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100) });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"app\">\n          <h1>React clock</h1>\n          <p>\n            {\n              this.state.isClockVisible\n                ? <Clock name={this.state.clockName} />\n                : 'Clock is hidden'\n            }\n          </p>\n          <button\n            type=\"button\"\n            className=\"app__button\"\n            onClick={this.showClock}\n            disabled={this.state.isClockVisible}\n          >\n            Show clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"app__button\"\n            onClick={this.hideClock}\n            disabled={!this.state.isClockVisible}\n          >\n            Hide clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"app__button\"\n            onClick={this.changeName}\n          >\n            Set random name\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}